## Conéctate a la base correcta (dojo) o usa el usuario postgres que siempre existe.
## Opción 1 — conectarte con iamantis al DB dojo:
sudo docker exec -it postgres_ddj psql -U iamantis -d dojo
## Una vez dentro del prompt psql, ejecuta:
\l
## se muestran las BD
## si el error es que falta una BD como dependencytrack, la creamos
CREATE DATABASE dependencytrack OWNER iamantis;
GRANT ALL PRIVILEGES ON DATABASE dependencytrack TO iamantis;
## verificamos creación con: (debe estar creada la nueva BD)
\l
## verifica roles
\du
## salimos de la BD
\q
## reiniciamos servicio con problemas en este cado DT
sudo docker restart dependencytrack
## validar conexion a la BD
sudo docker exec -it postgres_ddj psql -U iamantis -d dependencytrack -c '\conninfo'
## verificando status
sudo docker ps --filter name=postgres_ddj
## monitoreo al contenedor - revisamos errores
sudo docker logs -f dependencytrack | grep -E "Ready|Started|error"
## comprobar si acepta conexiones
sudo docker exec -it postgres_ddj psql -U iamantis -d dependencytrack -c '\conninfo'
## comprobar si tiene bases de datos creadas
sudo docker exec -it postgres_ddj psql -U iamantis -d dependencytrack -c '\dt'
## entrar a contenedor como root
docker exec -u root -t -i container_id /bin/bash

